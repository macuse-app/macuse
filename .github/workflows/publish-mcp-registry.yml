name: Publish to MCP Registry

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to publish (optional; defaults to latest)"
        required: false
        type: string
      dry_run:
        description: "Dry run (no publish)"
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tag
        id: tag
        shell: bash
        env:
          INPUT_TAG: ${{ inputs.tag }}
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
          elif [[ -n "${INPUT_TAG}" ]]; then
            TAG="${INPUT_TAG}"
          else
            TAG=$(gh release view --repo "${{ github.repository }}" --json tagName -q .tagName)
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Publishing for tag: $TAG"

      - name: Download release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download "${{ steps.tag.outputs.tag }}" \
            --repo "${{ github.repository }}" \
            --dir . \
            -p "macuse-*.mcpb" \
            -p "server.json"

      - name: Normalize artifact name
        run: |
          FILE=$(ls -1 *.mcpb | head -n1)
          if [[ -n "$FILE" && "$FILE" != "macuse.mcpb" ]]; then
            mv "$FILE" macuse.mcpb
          fi
          ls -l macuse.mcpb server.json || true

      - name: Publish to MCP Registry
        uses: modelcontextprotocol/registry/actions/publish@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          registry-token: ${{ secrets.MCP_REGISTRY_TOKEN }}
          manifest-path: manifest.json
          server-json-path: server.json
          package-path: macuse.mcpb
          dry-run: ${{ inputs.dry_run == true }}

